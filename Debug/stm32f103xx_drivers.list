
stm32f103xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000050c  08000130  08000130  00001130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  0800063c  08000644  00001644  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  0800063c  0800063c  00001644  2**0
                  CONTENTS
  4 .ARM          00000000  0800063c  0800063c  00001644  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800063c  08000644  00001644  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800063c  0800063c  0000163c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000640  08000640  00001640  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  00001644  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000644  00002000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000644  0000201c  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00001644  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000082b  00000000  00000000  0000166d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000278  00000000  00000000  00001e98  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000c0  00000000  00000000  00002110  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000085  00000000  00000000  000021d0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00001373  00000000  00000000  00002255  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000e62  00000000  00000000  000035c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00005200  00000000  00000000  0000442a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0000962a  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000024c  00000000  00000000  00009670  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000006f  00000000  00000000  000098bc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	@ (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	@ (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	@ (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000000 	.word	0x20000000
 800014c:	00000000 	.word	0x00000000
 8000150:	08000624 	.word	0x08000624

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	@ (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	@ (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	@ (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000004 	.word	0x20000004
 800016c:	08000624 	.word	0x08000624

08000170 <delay>:
 */

#include "stm32f103xx.h"
#include "stm32f103xx_gpio_driver.h"

void delay(void){
 8000170:	b480      	push	{r7}
 8000172:	b083      	sub	sp, #12
 8000174:	af00      	add	r7, sp, #0
	for(int i=0 ; i<=600000; i++){
 8000176:	2300      	movs	r3, #0
 8000178:	607b      	str	r3, [r7, #4]
 800017a:	e002      	b.n	8000182 <delay+0x12>
 800017c:	687b      	ldr	r3, [r7, #4]
 800017e:	3301      	adds	r3, #1
 8000180:	607b      	str	r3, [r7, #4]
 8000182:	687b      	ldr	r3, [r7, #4]
 8000184:	4a04      	ldr	r2, [pc, #16]	@ (8000198 <delay+0x28>)
 8000186:	4293      	cmp	r3, r2
 8000188:	ddf8      	ble.n	800017c <delay+0xc>

	}
}
 800018a:	bf00      	nop
 800018c:	bf00      	nop
 800018e:	370c      	adds	r7, #12
 8000190:	46bd      	mov	sp, r7
 8000192:	bc80      	pop	{r7}
 8000194:	4770      	bx	lr
 8000196:	bf00      	nop
 8000198:	000927c0 	.word	0x000927c0

0800019c <main>:
int main(void)
{
 800019c:	b580      	push	{r7, lr}
 800019e:	b084      	sub	sp, #16
 80001a0:	af00      	add	r7, sp, #0
    /* Loop forever */
	GPIO_Handle_t gpio_led;
	gpio_led.pGPIOx = GPIOC;
 80001a2:	4b0b      	ldr	r3, [pc, #44]	@ (80001d0 <main+0x34>)
 80001a4:	607b      	str	r3, [r7, #4]
	gpio_led.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_13;
 80001a6:	230d      	movs	r3, #13
 80001a8:	723b      	strb	r3, [r7, #8]
	gpio_led.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUTPUT_PP_10MHZ;
 80001aa:	2301      	movs	r3, #1
 80001ac:	727b      	strb	r3, [r7, #9]
	GPIO_periClockControl(GPIOC, ENABLE);
 80001ae:	2101      	movs	r1, #1
 80001b0:	4807      	ldr	r0, [pc, #28]	@ (80001d0 <main+0x34>)
 80001b2:	f000 f839 	bl	8000228 <GPIO_periClockControl>
	GPIO_init(&gpio_led);
 80001b6:	1d3b      	adds	r3, r7, #4
 80001b8:	4618      	mov	r0, r3
 80001ba:	f000 f8ed 	bl	8000398 <GPIO_init>
	while(1){
		GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 80001be:	210d      	movs	r1, #13
 80001c0:	4803      	ldr	r0, [pc, #12]	@ (80001d0 <main+0x34>)
 80001c2:	f000 f9f7 	bl	80005b4 <GPIO_TogglePin>
		delay();
 80001c6:	f7ff ffd3 	bl	8000170 <delay>
		GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 80001ca:	bf00      	nop
 80001cc:	e7f7      	b.n	80001be <main+0x22>
 80001ce:	bf00      	nop
 80001d0:	40011000 	.word	0x40011000

080001d4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80001d4:	480d      	ldr	r0, [pc, #52]	@ (800020c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80001d6:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80001d8:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80001dc:	480c      	ldr	r0, [pc, #48]	@ (8000210 <LoopForever+0x6>)
  ldr r1, =_edata
 80001de:	490d      	ldr	r1, [pc, #52]	@ (8000214 <LoopForever+0xa>)
  ldr r2, =_sidata
 80001e0:	4a0d      	ldr	r2, [pc, #52]	@ (8000218 <LoopForever+0xe>)
  movs r3, #0
 80001e2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80001e4:	e002      	b.n	80001ec <LoopCopyDataInit>

080001e6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80001e6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80001e8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80001ea:	3304      	adds	r3, #4

080001ec <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80001ec:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80001ee:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80001f0:	d3f9      	bcc.n	80001e6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80001f2:	4a0a      	ldr	r2, [pc, #40]	@ (800021c <LoopForever+0x12>)
  ldr r4, =_ebss
 80001f4:	4c0a      	ldr	r4, [pc, #40]	@ (8000220 <LoopForever+0x16>)
  movs r3, #0
 80001f6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80001f8:	e001      	b.n	80001fe <LoopFillZerobss>

080001fa <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80001fa:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80001fc:	3204      	adds	r2, #4

080001fe <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80001fe:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000200:	d3fb      	bcc.n	80001fa <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000202:	f000 f9eb 	bl	80005dc <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000206:	f7ff ffc9 	bl	800019c <main>

0800020a <LoopForever>:

LoopForever:
  b LoopForever
 800020a:	e7fe      	b.n	800020a <LoopForever>
  ldr   r0, =_estack
 800020c:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 8000210:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000214:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000218:	08000644 	.word	0x08000644
  ldr r2, =_sbss
 800021c:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000220:	2000001c 	.word	0x2000001c

08000224 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000224:	e7fe      	b.n	8000224 <ADC1_2_IRQHandler>
	...

08000228 <GPIO_periClockControl>:
 * @return            -  none
 *
 * @Note              -  none

 */
void GPIO_periClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi){
 8000228:	b480      	push	{r7}
 800022a:	b083      	sub	sp, #12
 800022c:	af00      	add	r7, sp, #0
 800022e:	6078      	str	r0, [r7, #4]
 8000230:	460b      	mov	r3, r1
 8000232:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE){
 8000234:	78fb      	ldrb	r3, [r7, #3]
 8000236:	2b01      	cmp	r3, #1
 8000238:	d14c      	bne.n	80002d4 <GPIO_periClockControl+0xac>
		if(pGPIOx == GPIOA){
 800023a:	687b      	ldr	r3, [r7, #4]
 800023c:	4a4e      	ldr	r2, [pc, #312]	@ (8000378 <GPIO_periClockControl+0x150>)
 800023e:	4293      	cmp	r3, r2
 8000240:	d106      	bne.n	8000250 <GPIO_periClockControl+0x28>
			GPIOA_PCLK_EN();
 8000242:	4b4e      	ldr	r3, [pc, #312]	@ (800037c <GPIO_periClockControl+0x154>)
 8000244:	699b      	ldr	r3, [r3, #24]
 8000246:	4a4d      	ldr	r2, [pc, #308]	@ (800037c <GPIO_periClockControl+0x154>)
 8000248:	f043 0304 	orr.w	r3, r3, #4
 800024c:	6193      	str	r3, [r2, #24]
		}
		else if(pGPIOx == GPIOG){
			GPIOG_PCLK_DI();
		}
	}
}
 800024e:	e08d      	b.n	800036c <GPIO_periClockControl+0x144>
		else if(pGPIOx == GPIOB){
 8000250:	687b      	ldr	r3, [r7, #4]
 8000252:	4a4b      	ldr	r2, [pc, #300]	@ (8000380 <GPIO_periClockControl+0x158>)
 8000254:	4293      	cmp	r3, r2
 8000256:	d106      	bne.n	8000266 <GPIO_periClockControl+0x3e>
			GPIOB_PCLK_EN();
 8000258:	4b48      	ldr	r3, [pc, #288]	@ (800037c <GPIO_periClockControl+0x154>)
 800025a:	699b      	ldr	r3, [r3, #24]
 800025c:	4a47      	ldr	r2, [pc, #284]	@ (800037c <GPIO_periClockControl+0x154>)
 800025e:	f043 0308 	orr.w	r3, r3, #8
 8000262:	6193      	str	r3, [r2, #24]
}
 8000264:	e082      	b.n	800036c <GPIO_periClockControl+0x144>
		else if(pGPIOx == GPIOC){
 8000266:	687b      	ldr	r3, [r7, #4]
 8000268:	4a46      	ldr	r2, [pc, #280]	@ (8000384 <GPIO_periClockControl+0x15c>)
 800026a:	4293      	cmp	r3, r2
 800026c:	d106      	bne.n	800027c <GPIO_periClockControl+0x54>
			GPIOC_PCLK_EN();
 800026e:	4b43      	ldr	r3, [pc, #268]	@ (800037c <GPIO_periClockControl+0x154>)
 8000270:	699b      	ldr	r3, [r3, #24]
 8000272:	4a42      	ldr	r2, [pc, #264]	@ (800037c <GPIO_periClockControl+0x154>)
 8000274:	f043 0310 	orr.w	r3, r3, #16
 8000278:	6193      	str	r3, [r2, #24]
}
 800027a:	e077      	b.n	800036c <GPIO_periClockControl+0x144>
		else if(pGPIOx == GPIOD){
 800027c:	687b      	ldr	r3, [r7, #4]
 800027e:	4a42      	ldr	r2, [pc, #264]	@ (8000388 <GPIO_periClockControl+0x160>)
 8000280:	4293      	cmp	r3, r2
 8000282:	d106      	bne.n	8000292 <GPIO_periClockControl+0x6a>
			GPIOD_PCLK_EN();
 8000284:	4b3d      	ldr	r3, [pc, #244]	@ (800037c <GPIO_periClockControl+0x154>)
 8000286:	699b      	ldr	r3, [r3, #24]
 8000288:	4a3c      	ldr	r2, [pc, #240]	@ (800037c <GPIO_periClockControl+0x154>)
 800028a:	f043 0320 	orr.w	r3, r3, #32
 800028e:	6193      	str	r3, [r2, #24]
}
 8000290:	e06c      	b.n	800036c <GPIO_periClockControl+0x144>
		else if(pGPIOx == GPIOE){
 8000292:	687b      	ldr	r3, [r7, #4]
 8000294:	4a3d      	ldr	r2, [pc, #244]	@ (800038c <GPIO_periClockControl+0x164>)
 8000296:	4293      	cmp	r3, r2
 8000298:	d106      	bne.n	80002a8 <GPIO_periClockControl+0x80>
			GPIOE_PCLK_EN();
 800029a:	4b38      	ldr	r3, [pc, #224]	@ (800037c <GPIO_periClockControl+0x154>)
 800029c:	699b      	ldr	r3, [r3, #24]
 800029e:	4a37      	ldr	r2, [pc, #220]	@ (800037c <GPIO_periClockControl+0x154>)
 80002a0:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80002a4:	6193      	str	r3, [r2, #24]
}
 80002a6:	e061      	b.n	800036c <GPIO_periClockControl+0x144>
		else if(pGPIOx == GPIOF){
 80002a8:	687b      	ldr	r3, [r7, #4]
 80002aa:	4a39      	ldr	r2, [pc, #228]	@ (8000390 <GPIO_periClockControl+0x168>)
 80002ac:	4293      	cmp	r3, r2
 80002ae:	d106      	bne.n	80002be <GPIO_periClockControl+0x96>
			GPIOF_PCLK_EN();
 80002b0:	4b32      	ldr	r3, [pc, #200]	@ (800037c <GPIO_periClockControl+0x154>)
 80002b2:	699b      	ldr	r3, [r3, #24]
 80002b4:	4a31      	ldr	r2, [pc, #196]	@ (800037c <GPIO_periClockControl+0x154>)
 80002b6:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80002ba:	6193      	str	r3, [r2, #24]
}
 80002bc:	e056      	b.n	800036c <GPIO_periClockControl+0x144>
		else if(pGPIOx == GPIOG){
 80002be:	687b      	ldr	r3, [r7, #4]
 80002c0:	4a34      	ldr	r2, [pc, #208]	@ (8000394 <GPIO_periClockControl+0x16c>)
 80002c2:	4293      	cmp	r3, r2
 80002c4:	d152      	bne.n	800036c <GPIO_periClockControl+0x144>
			GPIOG_PCLK_EN();
 80002c6:	4b2d      	ldr	r3, [pc, #180]	@ (800037c <GPIO_periClockControl+0x154>)
 80002c8:	699b      	ldr	r3, [r3, #24]
 80002ca:	4a2c      	ldr	r2, [pc, #176]	@ (800037c <GPIO_periClockControl+0x154>)
 80002cc:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80002d0:	6193      	str	r3, [r2, #24]
}
 80002d2:	e04b      	b.n	800036c <GPIO_periClockControl+0x144>
		if(pGPIOx == GPIOA){
 80002d4:	687b      	ldr	r3, [r7, #4]
 80002d6:	4a28      	ldr	r2, [pc, #160]	@ (8000378 <GPIO_periClockControl+0x150>)
 80002d8:	4293      	cmp	r3, r2
 80002da:	d106      	bne.n	80002ea <GPIO_periClockControl+0xc2>
			GPIOA_PCLK_DI();
 80002dc:	4b27      	ldr	r3, [pc, #156]	@ (800037c <GPIO_periClockControl+0x154>)
 80002de:	699b      	ldr	r3, [r3, #24]
 80002e0:	4a26      	ldr	r2, [pc, #152]	@ (800037c <GPIO_periClockControl+0x154>)
 80002e2:	f023 0304 	bic.w	r3, r3, #4
 80002e6:	6193      	str	r3, [r2, #24]
}
 80002e8:	e040      	b.n	800036c <GPIO_periClockControl+0x144>
		else if(pGPIOx == GPIOB){
 80002ea:	687b      	ldr	r3, [r7, #4]
 80002ec:	4a24      	ldr	r2, [pc, #144]	@ (8000380 <GPIO_periClockControl+0x158>)
 80002ee:	4293      	cmp	r3, r2
 80002f0:	d106      	bne.n	8000300 <GPIO_periClockControl+0xd8>
			GPIOB_PCLK_DI();
 80002f2:	4b22      	ldr	r3, [pc, #136]	@ (800037c <GPIO_periClockControl+0x154>)
 80002f4:	699b      	ldr	r3, [r3, #24]
 80002f6:	4a21      	ldr	r2, [pc, #132]	@ (800037c <GPIO_periClockControl+0x154>)
 80002f8:	f023 0308 	bic.w	r3, r3, #8
 80002fc:	6193      	str	r3, [r2, #24]
}
 80002fe:	e035      	b.n	800036c <GPIO_periClockControl+0x144>
		else if(pGPIOx == GPIOC){
 8000300:	687b      	ldr	r3, [r7, #4]
 8000302:	4a20      	ldr	r2, [pc, #128]	@ (8000384 <GPIO_periClockControl+0x15c>)
 8000304:	4293      	cmp	r3, r2
 8000306:	d106      	bne.n	8000316 <GPIO_periClockControl+0xee>
			GPIOC_PCLK_DI();
 8000308:	4b1c      	ldr	r3, [pc, #112]	@ (800037c <GPIO_periClockControl+0x154>)
 800030a:	699b      	ldr	r3, [r3, #24]
 800030c:	4a1b      	ldr	r2, [pc, #108]	@ (800037c <GPIO_periClockControl+0x154>)
 800030e:	f023 0310 	bic.w	r3, r3, #16
 8000312:	6193      	str	r3, [r2, #24]
}
 8000314:	e02a      	b.n	800036c <GPIO_periClockControl+0x144>
		else if(pGPIOx == GPIOD){
 8000316:	687b      	ldr	r3, [r7, #4]
 8000318:	4a1b      	ldr	r2, [pc, #108]	@ (8000388 <GPIO_periClockControl+0x160>)
 800031a:	4293      	cmp	r3, r2
 800031c:	d106      	bne.n	800032c <GPIO_periClockControl+0x104>
			GPIOD_PCLK_DI();
 800031e:	4b17      	ldr	r3, [pc, #92]	@ (800037c <GPIO_periClockControl+0x154>)
 8000320:	699b      	ldr	r3, [r3, #24]
 8000322:	4a16      	ldr	r2, [pc, #88]	@ (800037c <GPIO_periClockControl+0x154>)
 8000324:	f023 0320 	bic.w	r3, r3, #32
 8000328:	6193      	str	r3, [r2, #24]
}
 800032a:	e01f      	b.n	800036c <GPIO_periClockControl+0x144>
		else if(pGPIOx == GPIOE){
 800032c:	687b      	ldr	r3, [r7, #4]
 800032e:	4a17      	ldr	r2, [pc, #92]	@ (800038c <GPIO_periClockControl+0x164>)
 8000330:	4293      	cmp	r3, r2
 8000332:	d106      	bne.n	8000342 <GPIO_periClockControl+0x11a>
			GPIOE_PCLK_DI();
 8000334:	4b11      	ldr	r3, [pc, #68]	@ (800037c <GPIO_periClockControl+0x154>)
 8000336:	699b      	ldr	r3, [r3, #24]
 8000338:	4a10      	ldr	r2, [pc, #64]	@ (800037c <GPIO_periClockControl+0x154>)
 800033a:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800033e:	6193      	str	r3, [r2, #24]
}
 8000340:	e014      	b.n	800036c <GPIO_periClockControl+0x144>
		else if(pGPIOx == GPIOF){
 8000342:	687b      	ldr	r3, [r7, #4]
 8000344:	4a12      	ldr	r2, [pc, #72]	@ (8000390 <GPIO_periClockControl+0x168>)
 8000346:	4293      	cmp	r3, r2
 8000348:	d106      	bne.n	8000358 <GPIO_periClockControl+0x130>
			GPIOF_PCLK_DI();
 800034a:	4b0c      	ldr	r3, [pc, #48]	@ (800037c <GPIO_periClockControl+0x154>)
 800034c:	699b      	ldr	r3, [r3, #24]
 800034e:	4a0b      	ldr	r2, [pc, #44]	@ (800037c <GPIO_periClockControl+0x154>)
 8000350:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8000354:	6193      	str	r3, [r2, #24]
}
 8000356:	e009      	b.n	800036c <GPIO_periClockControl+0x144>
		else if(pGPIOx == GPIOG){
 8000358:	687b      	ldr	r3, [r7, #4]
 800035a:	4a0e      	ldr	r2, [pc, #56]	@ (8000394 <GPIO_periClockControl+0x16c>)
 800035c:	4293      	cmp	r3, r2
 800035e:	d105      	bne.n	800036c <GPIO_periClockControl+0x144>
			GPIOG_PCLK_DI();
 8000360:	4b06      	ldr	r3, [pc, #24]	@ (800037c <GPIO_periClockControl+0x154>)
 8000362:	699b      	ldr	r3, [r3, #24]
 8000364:	4a05      	ldr	r2, [pc, #20]	@ (800037c <GPIO_periClockControl+0x154>)
 8000366:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800036a:	6193      	str	r3, [r2, #24]
}
 800036c:	bf00      	nop
 800036e:	370c      	adds	r7, #12
 8000370:	46bd      	mov	sp, r7
 8000372:	bc80      	pop	{r7}
 8000374:	4770      	bx	lr
 8000376:	bf00      	nop
 8000378:	40010800 	.word	0x40010800
 800037c:	40021000 	.word	0x40021000
 8000380:	40010c00 	.word	0x40010c00
 8000384:	40011000 	.word	0x40011000
 8000388:	40011400 	.word	0x40011400
 800038c:	40011800 	.word	0x40011800
 8000390:	40011c00 	.word	0x40011c00
 8000394:	40012000 	.word	0x40012000

08000398 <GPIO_init>:
 *
 * @Note              -

 */

void GPIO_init(GPIO_Handle_t *pGPIOHandle){
 8000398:	b480      	push	{r7}
 800039a:	b085      	sub	sp, #20
 800039c:	af00      	add	r7, sp, #0
 800039e:	6078      	str	r0, [r7, #4]
	uint32_t temp = 0;
 80003a0:	2300      	movs	r3, #0
 80003a2:	60fb      	str	r3, [r7, #12]
	// 1. configure the mode of GPIO Pin
	// 2. configure the speed
	// 3. configure pull up pull down settings
	// 4. configure the output type
	// 5. configure the alternate functionality
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_AF_OD_50MHZ){
 80003a4:	687b      	ldr	r3, [r7, #4]
 80003a6:	795b      	ldrb	r3, [r3, #5]
 80003a8:	2b0f      	cmp	r3, #15
 80003aa:	d847      	bhi.n	800043c <GPIO_init+0xa4>
		if (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber <= 7){
 80003ac:	687b      	ldr	r3, [r7, #4]
 80003ae:	791b      	ldrb	r3, [r3, #4]
 80003b0:	2b07      	cmp	r3, #7
 80003b2:	d820      	bhi.n	80003f6 <GPIO_init+0x5e>
			temp =	(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode	<< (4*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80003b4:	687b      	ldr	r3, [r7, #4]
 80003b6:	795b      	ldrb	r3, [r3, #5]
 80003b8:	461a      	mov	r2, r3
 80003ba:	687b      	ldr	r3, [r7, #4]
 80003bc:	791b      	ldrb	r3, [r3, #4]
 80003be:	009b      	lsls	r3, r3, #2
 80003c0:	fa02 f303 	lsl.w	r3, r2, r3
 80003c4:	60fb      	str	r3, [r7, #12]
			pGPIOHandle->pGPIOx->CRL &= ~(0xF << (4* (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));
 80003c6:	687b      	ldr	r3, [r7, #4]
 80003c8:	681b      	ldr	r3, [r3, #0]
 80003ca:	681a      	ldr	r2, [r3, #0]
 80003cc:	687b      	ldr	r3, [r7, #4]
 80003ce:	791b      	ldrb	r3, [r3, #4]
 80003d0:	009b      	lsls	r3, r3, #2
 80003d2:	210f      	movs	r1, #15
 80003d4:	fa01 f303 	lsl.w	r3, r1, r3
 80003d8:	43db      	mvns	r3, r3
 80003da:	4619      	mov	r1, r3
 80003dc:	687b      	ldr	r3, [r7, #4]
 80003de:	681b      	ldr	r3, [r3, #0]
 80003e0:	400a      	ands	r2, r1
 80003e2:	601a      	str	r2, [r3, #0]
			pGPIOHandle->pGPIOx->CRL |= temp;
 80003e4:	687b      	ldr	r3, [r7, #4]
 80003e6:	681b      	ldr	r3, [r3, #0]
 80003e8:	6819      	ldr	r1, [r3, #0]
 80003ea:	687b      	ldr	r3, [r7, #4]
 80003ec:	681b      	ldr	r3, [r3, #0]
 80003ee:	68fa      	ldr	r2, [r7, #12]
 80003f0:	430a      	orrs	r2, r1
 80003f2:	601a      	str	r2, [r3, #0]
		uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
		AFIO->EXTICR[temp1] = portcode << (temp2*4);
		}


}
 80003f4:	e0c6      	b.n	8000584 <GPIO_init+0x1ec>
			temp =	(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode	<< (4* (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber - 8 )));
 80003f6:	687b      	ldr	r3, [r7, #4]
 80003f8:	795b      	ldrb	r3, [r3, #5]
 80003fa:	461a      	mov	r2, r3
 80003fc:	687b      	ldr	r3, [r7, #4]
 80003fe:	791b      	ldrb	r3, [r3, #4]
 8000400:	3b08      	subs	r3, #8
 8000402:	009b      	lsls	r3, r3, #2
 8000404:	fa02 f303 	lsl.w	r3, r2, r3
 8000408:	60fb      	str	r3, [r7, #12]
			pGPIOHandle->pGPIOx->CRH &= ~(0xF << (4* (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber - 8 )));
 800040a:	687b      	ldr	r3, [r7, #4]
 800040c:	681b      	ldr	r3, [r3, #0]
 800040e:	685a      	ldr	r2, [r3, #4]
 8000410:	687b      	ldr	r3, [r7, #4]
 8000412:	791b      	ldrb	r3, [r3, #4]
 8000414:	3b08      	subs	r3, #8
 8000416:	009b      	lsls	r3, r3, #2
 8000418:	210f      	movs	r1, #15
 800041a:	fa01 f303 	lsl.w	r3, r1, r3
 800041e:	43db      	mvns	r3, r3
 8000420:	4619      	mov	r1, r3
 8000422:	687b      	ldr	r3, [r7, #4]
 8000424:	681b      	ldr	r3, [r3, #0]
 8000426:	400a      	ands	r2, r1
 8000428:	605a      	str	r2, [r3, #4]
			pGPIOHandle->pGPIOx->CRH |= temp;
 800042a:	687b      	ldr	r3, [r7, #4]
 800042c:	681b      	ldr	r3, [r3, #0]
 800042e:	6859      	ldr	r1, [r3, #4]
 8000430:	687b      	ldr	r3, [r7, #4]
 8000432:	681b      	ldr	r3, [r3, #0]
 8000434:	68fa      	ldr	r2, [r7, #12]
 8000436:	430a      	orrs	r2, r1
 8000438:	605a      	str	r2, [r3, #4]
}
 800043a:	e0a3      	b.n	8000584 <GPIO_init+0x1ec>
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT){
 800043c:	687b      	ldr	r3, [r7, #4]
 800043e:	795b      	ldrb	r3, [r3, #5]
 8000440:	2b10      	cmp	r3, #16
 8000442:	d117      	bne.n	8000474 <GPIO_init+0xdc>
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000444:	4b52      	ldr	r3, [pc, #328]	@ (8000590 <GPIO_init+0x1f8>)
 8000446:	68db      	ldr	r3, [r3, #12]
 8000448:	687a      	ldr	r2, [r7, #4]
 800044a:	7912      	ldrb	r2, [r2, #4]
 800044c:	4611      	mov	r1, r2
 800044e:	2201      	movs	r2, #1
 8000450:	408a      	lsls	r2, r1
 8000452:	4611      	mov	r1, r2
 8000454:	4a4e      	ldr	r2, [pc, #312]	@ (8000590 <GPIO_init+0x1f8>)
 8000456:	430b      	orrs	r3, r1
 8000458:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800045a:	4b4d      	ldr	r3, [pc, #308]	@ (8000590 <GPIO_init+0x1f8>)
 800045c:	689b      	ldr	r3, [r3, #8]
 800045e:	687a      	ldr	r2, [r7, #4]
 8000460:	7912      	ldrb	r2, [r2, #4]
 8000462:	4611      	mov	r1, r2
 8000464:	2201      	movs	r2, #1
 8000466:	408a      	lsls	r2, r1
 8000468:	43d2      	mvns	r2, r2
 800046a:	4611      	mov	r1, r2
 800046c:	4a48      	ldr	r2, [pc, #288]	@ (8000590 <GPIO_init+0x1f8>)
 800046e:	400b      	ands	r3, r1
 8000470:	6093      	str	r3, [r2, #8]
 8000472:	e035      	b.n	80004e0 <GPIO_init+0x148>
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT){
 8000474:	687b      	ldr	r3, [r7, #4]
 8000476:	795b      	ldrb	r3, [r3, #5]
 8000478:	2b11      	cmp	r3, #17
 800047a:	d117      	bne.n	80004ac <GPIO_init+0x114>
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800047c:	4b44      	ldr	r3, [pc, #272]	@ (8000590 <GPIO_init+0x1f8>)
 800047e:	689b      	ldr	r3, [r3, #8]
 8000480:	687a      	ldr	r2, [r7, #4]
 8000482:	7912      	ldrb	r2, [r2, #4]
 8000484:	4611      	mov	r1, r2
 8000486:	2201      	movs	r2, #1
 8000488:	408a      	lsls	r2, r1
 800048a:	4611      	mov	r1, r2
 800048c:	4a40      	ldr	r2, [pc, #256]	@ (8000590 <GPIO_init+0x1f8>)
 800048e:	430b      	orrs	r3, r1
 8000490:	6093      	str	r3, [r2, #8]
			EXTI->FTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000492:	4b3f      	ldr	r3, [pc, #252]	@ (8000590 <GPIO_init+0x1f8>)
 8000494:	68db      	ldr	r3, [r3, #12]
 8000496:	687a      	ldr	r2, [r7, #4]
 8000498:	7912      	ldrb	r2, [r2, #4]
 800049a:	4611      	mov	r1, r2
 800049c:	2201      	movs	r2, #1
 800049e:	408a      	lsls	r2, r1
 80004a0:	43d2      	mvns	r2, r2
 80004a2:	4611      	mov	r1, r2
 80004a4:	4a3a      	ldr	r2, [pc, #232]	@ (8000590 <GPIO_init+0x1f8>)
 80004a6:	400b      	ands	r3, r1
 80004a8:	60d3      	str	r3, [r2, #12]
 80004aa:	e019      	b.n	80004e0 <GPIO_init+0x148>
		else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT){
 80004ac:	687b      	ldr	r3, [r7, #4]
 80004ae:	795b      	ldrb	r3, [r3, #5]
 80004b0:	2b12      	cmp	r3, #18
 80004b2:	d115      	bne.n	80004e0 <GPIO_init+0x148>
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004b4:	4b36      	ldr	r3, [pc, #216]	@ (8000590 <GPIO_init+0x1f8>)
 80004b6:	68db      	ldr	r3, [r3, #12]
 80004b8:	687a      	ldr	r2, [r7, #4]
 80004ba:	7912      	ldrb	r2, [r2, #4]
 80004bc:	4611      	mov	r1, r2
 80004be:	2201      	movs	r2, #1
 80004c0:	408a      	lsls	r2, r1
 80004c2:	4611      	mov	r1, r2
 80004c4:	4a32      	ldr	r2, [pc, #200]	@ (8000590 <GPIO_init+0x1f8>)
 80004c6:	430b      	orrs	r3, r1
 80004c8:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004ca:	4b31      	ldr	r3, [pc, #196]	@ (8000590 <GPIO_init+0x1f8>)
 80004cc:	689b      	ldr	r3, [r3, #8]
 80004ce:	687a      	ldr	r2, [r7, #4]
 80004d0:	7912      	ldrb	r2, [r2, #4]
 80004d2:	4611      	mov	r1, r2
 80004d4:	2201      	movs	r2, #1
 80004d6:	408a      	lsls	r2, r1
 80004d8:	4611      	mov	r1, r2
 80004da:	4a2d      	ldr	r2, [pc, #180]	@ (8000590 <GPIO_init+0x1f8>)
 80004dc:	430b      	orrs	r3, r1
 80004de:	6093      	str	r3, [r2, #8]
		EXTI->IMR |= 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
 80004e0:	4b2b      	ldr	r3, [pc, #172]	@ (8000590 <GPIO_init+0x1f8>)
 80004e2:	681b      	ldr	r3, [r3, #0]
 80004e4:	687a      	ldr	r2, [r7, #4]
 80004e6:	7912      	ldrb	r2, [r2, #4]
 80004e8:	4611      	mov	r1, r2
 80004ea:	2201      	movs	r2, #1
 80004ec:	408a      	lsls	r2, r1
 80004ee:	4611      	mov	r1, r2
 80004f0:	4a27      	ldr	r2, [pc, #156]	@ (8000590 <GPIO_init+0x1f8>)
 80004f2:	430b      	orrs	r3, r1
 80004f4:	6013      	str	r3, [r2, #0]
		temp1 = (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)/4; //Logic
 80004f6:	687b      	ldr	r3, [r7, #4]
 80004f8:	791b      	ldrb	r3, [r3, #4]
 80004fa:	089b      	lsrs	r3, r3, #2
 80004fc:	72fb      	strb	r3, [r7, #11]
		temp2 = (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)%4;
 80004fe:	687b      	ldr	r3, [r7, #4]
 8000500:	791b      	ldrb	r3, [r3, #4]
 8000502:	f003 0303 	and.w	r3, r3, #3
 8000506:	72bb      	strb	r3, [r7, #10]
		uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 8000508:	687b      	ldr	r3, [r7, #4]
 800050a:	681b      	ldr	r3, [r3, #0]
 800050c:	4a21      	ldr	r2, [pc, #132]	@ (8000594 <GPIO_init+0x1fc>)
 800050e:	4293      	cmp	r3, r2
 8000510:	d02b      	beq.n	800056a <GPIO_init+0x1d2>
 8000512:	687b      	ldr	r3, [r7, #4]
 8000514:	681b      	ldr	r3, [r3, #0]
 8000516:	4a20      	ldr	r2, [pc, #128]	@ (8000598 <GPIO_init+0x200>)
 8000518:	4293      	cmp	r3, r2
 800051a:	d024      	beq.n	8000566 <GPIO_init+0x1ce>
 800051c:	687b      	ldr	r3, [r7, #4]
 800051e:	681b      	ldr	r3, [r3, #0]
 8000520:	4a1e      	ldr	r2, [pc, #120]	@ (800059c <GPIO_init+0x204>)
 8000522:	4293      	cmp	r3, r2
 8000524:	d01d      	beq.n	8000562 <GPIO_init+0x1ca>
 8000526:	687b      	ldr	r3, [r7, #4]
 8000528:	681b      	ldr	r3, [r3, #0]
 800052a:	4a1d      	ldr	r2, [pc, #116]	@ (80005a0 <GPIO_init+0x208>)
 800052c:	4293      	cmp	r3, r2
 800052e:	d016      	beq.n	800055e <GPIO_init+0x1c6>
 8000530:	687b      	ldr	r3, [r7, #4]
 8000532:	681b      	ldr	r3, [r3, #0]
 8000534:	4a1b      	ldr	r2, [pc, #108]	@ (80005a4 <GPIO_init+0x20c>)
 8000536:	4293      	cmp	r3, r2
 8000538:	d00f      	beq.n	800055a <GPIO_init+0x1c2>
 800053a:	687b      	ldr	r3, [r7, #4]
 800053c:	681b      	ldr	r3, [r3, #0]
 800053e:	4a1a      	ldr	r2, [pc, #104]	@ (80005a8 <GPIO_init+0x210>)
 8000540:	4293      	cmp	r3, r2
 8000542:	d008      	beq.n	8000556 <GPIO_init+0x1be>
 8000544:	687b      	ldr	r3, [r7, #4]
 8000546:	681b      	ldr	r3, [r3, #0]
 8000548:	4a18      	ldr	r2, [pc, #96]	@ (80005ac <GPIO_init+0x214>)
 800054a:	4293      	cmp	r3, r2
 800054c:	d101      	bne.n	8000552 <GPIO_init+0x1ba>
 800054e:	2306      	movs	r3, #6
 8000550:	e00c      	b.n	800056c <GPIO_init+0x1d4>
 8000552:	2300      	movs	r3, #0
 8000554:	e00a      	b.n	800056c <GPIO_init+0x1d4>
 8000556:	2305      	movs	r3, #5
 8000558:	e008      	b.n	800056c <GPIO_init+0x1d4>
 800055a:	2304      	movs	r3, #4
 800055c:	e006      	b.n	800056c <GPIO_init+0x1d4>
 800055e:	2303      	movs	r3, #3
 8000560:	e004      	b.n	800056c <GPIO_init+0x1d4>
 8000562:	2302      	movs	r3, #2
 8000564:	e002      	b.n	800056c <GPIO_init+0x1d4>
 8000566:	2301      	movs	r3, #1
 8000568:	e000      	b.n	800056c <GPIO_init+0x1d4>
 800056a:	2300      	movs	r3, #0
 800056c:	727b      	strb	r3, [r7, #9]
		AFIO->EXTICR[temp1] = portcode << (temp2*4);
 800056e:	7a7a      	ldrb	r2, [r7, #9]
 8000570:	7abb      	ldrb	r3, [r7, #10]
 8000572:	009b      	lsls	r3, r3, #2
 8000574:	fa02 f103 	lsl.w	r1, r2, r3
 8000578:	4a0d      	ldr	r2, [pc, #52]	@ (80005b0 <GPIO_init+0x218>)
 800057a:	7afb      	ldrb	r3, [r7, #11]
 800057c:	3302      	adds	r3, #2
 800057e:	009b      	lsls	r3, r3, #2
 8000580:	4413      	add	r3, r2
 8000582:	6059      	str	r1, [r3, #4]
}
 8000584:	bf00      	nop
 8000586:	3714      	adds	r7, #20
 8000588:	46bd      	mov	sp, r7
 800058a:	bc80      	pop	{r7}
 800058c:	4770      	bx	lr
 800058e:	bf00      	nop
 8000590:	40010400 	.word	0x40010400
 8000594:	40010800 	.word	0x40010800
 8000598:	40010c00 	.word	0x40010c00
 800059c:	40011000 	.word	0x40011000
 80005a0:	40011400 	.word	0x40011400
 80005a4:	40011800 	.word	0x40011800
 80005a8:	40011c00 	.word	0x40011c00
 80005ac:	40012000 	.word	0x40012000
 80005b0:	40010000 	.word	0x40010000

080005b4 <GPIO_TogglePin>:
 *
 * @Note              -

 */

void GPIO_TogglePin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber){
 80005b4:	b480      	push	{r7}
 80005b6:	b083      	sub	sp, #12
 80005b8:	af00      	add	r7, sp, #0
 80005ba:	6078      	str	r0, [r7, #4]
 80005bc:	460b      	mov	r3, r1
 80005be:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1 << PinNumber);
 80005c0:	687b      	ldr	r3, [r7, #4]
 80005c2:	68db      	ldr	r3, [r3, #12]
 80005c4:	78fa      	ldrb	r2, [r7, #3]
 80005c6:	2101      	movs	r1, #1
 80005c8:	fa01 f202 	lsl.w	r2, r1, r2
 80005cc:	405a      	eors	r2, r3
 80005ce:	687b      	ldr	r3, [r7, #4]
 80005d0:	60da      	str	r2, [r3, #12]
}
 80005d2:	bf00      	nop
 80005d4:	370c      	adds	r7, #12
 80005d6:	46bd      	mov	sp, r7
 80005d8:	bc80      	pop	{r7}
 80005da:	4770      	bx	lr

080005dc <__libc_init_array>:
 80005dc:	b570      	push	{r4, r5, r6, lr}
 80005de:	2600      	movs	r6, #0
 80005e0:	4d0c      	ldr	r5, [pc, #48]	@ (8000614 <__libc_init_array+0x38>)
 80005e2:	4c0d      	ldr	r4, [pc, #52]	@ (8000618 <__libc_init_array+0x3c>)
 80005e4:	1b64      	subs	r4, r4, r5
 80005e6:	10a4      	asrs	r4, r4, #2
 80005e8:	42a6      	cmp	r6, r4
 80005ea:	d109      	bne.n	8000600 <__libc_init_array+0x24>
 80005ec:	f000 f81a 	bl	8000624 <_init>
 80005f0:	2600      	movs	r6, #0
 80005f2:	4d0a      	ldr	r5, [pc, #40]	@ (800061c <__libc_init_array+0x40>)
 80005f4:	4c0a      	ldr	r4, [pc, #40]	@ (8000620 <__libc_init_array+0x44>)
 80005f6:	1b64      	subs	r4, r4, r5
 80005f8:	10a4      	asrs	r4, r4, #2
 80005fa:	42a6      	cmp	r6, r4
 80005fc:	d105      	bne.n	800060a <__libc_init_array+0x2e>
 80005fe:	bd70      	pop	{r4, r5, r6, pc}
 8000600:	f855 3b04 	ldr.w	r3, [r5], #4
 8000604:	4798      	blx	r3
 8000606:	3601      	adds	r6, #1
 8000608:	e7ee      	b.n	80005e8 <__libc_init_array+0xc>
 800060a:	f855 3b04 	ldr.w	r3, [r5], #4
 800060e:	4798      	blx	r3
 8000610:	3601      	adds	r6, #1
 8000612:	e7f2      	b.n	80005fa <__libc_init_array+0x1e>
 8000614:	0800063c 	.word	0x0800063c
 8000618:	0800063c 	.word	0x0800063c
 800061c:	0800063c 	.word	0x0800063c
 8000620:	08000640 	.word	0x08000640

08000624 <_init>:
 8000624:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000626:	bf00      	nop
 8000628:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800062a:	bc08      	pop	{r3}
 800062c:	469e      	mov	lr, r3
 800062e:	4770      	bx	lr

08000630 <_fini>:
 8000630:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000632:	bf00      	nop
 8000634:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000636:	bc08      	pop	{r3}
 8000638:	469e      	mov	lr, r3
 800063a:	4770      	bx	lr
